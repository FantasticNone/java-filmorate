DROP TABLE IF EXISTS
FILM_GENRES,
LIKES,
FRIENDS,
USERS,
FILMS,
MPA,
GENRES;


CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
                                          MPA_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          MPA_NAME VARCHAR(50) NOT NULL
);


CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
                                            FILM_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            NAME VARCHAR(50) NOT NULL,
                                            DESCRIPTION VARCHAR(200) NOT NULL,
                                            RELEASE_DATE DATE NOT NULL,
                                            DURATION INT NOT NULL,
                                            MPA_ID INT NOT NULL,
                                            CONSTRAINT FK_FILM_MPA
                                            FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
                                            USER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            EMAIL VARCHAR(50) NOT NULL UNIQUE,
                                            LOGIN VARCHAR(50) NOT NULL UNIQUE,
                                            NAME VARCHAR(50),
                                            BIRTHDAY DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
                                             GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                             GENRE_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRES (
                                                  FILM_ID INT NOT NULL,
                                                  GENRE_ID INT NOT NULL,
                                                  PRIMARY KEY (FILM_ID, GENRE_ID),
                                                  CONSTRAINT FK_GENRE_FILMS
                                                  FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID)
                                                        ON DELETE CASCADE,
                                                  CONSTRAINT FK_FILM_GENRES
                                                  FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(GENRE_ID)
                                                        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
                                                 FILM_ID INT,
                                                 USER_ID INT,
                                                 PRIMARY KEY (FILM_ID, USER_ID),
                                                 CONSTRAINT FK_USER_FILMS
                                                 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID)
                                                        ON DELETE CASCADE,
                                                 CONSTRAINT FK_FILM_USERS
                                                 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID)
                                                        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
                                                   USER_ID INT NOT NULL,
                                                   FRIEND_ID INT NOT NULL,
                                                   STATUS BOOLEAN NOT NULL,
                                                   PRIMARY KEY (USER_ID, FRIEND_ID, STATUS),
                                                   CONSTRAINT FK_USER
                                                   FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID)
                                                        ON DELETE CASCADE,
                                                   CONSTRAINT FK_USER_FRIENDS
                                                   FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(USER_ID)
                                                        ON DELETE CASCADE
);
